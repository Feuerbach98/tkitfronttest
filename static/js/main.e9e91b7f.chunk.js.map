{"version":3,"sources":["Components/SidebarItem.js","Components/EditNode.js","Components/Sidebar.js","Components/Holst.js","Components/NodeInnerCustom.js","nodes.js","constants.js","Components/Tkit.js","index.js"],"names":["SidebarItem","_this$props","this","props","type","ports","properties","react_default","a","createElement","draggable","className","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","JSON","stringify","title","Component","EditNode","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","objectSpread","selectedNode","handleChange","_event$target","target","value","name","setState","defineProperty","inherits","createClass","key","condition","entries","fields","i","_this2","node","Fragment","description","map","field","index","htmlFor","id","required","is_required","onChange","React","Sidebar","_ref","data","nodes","NodesIsNotVisible","Components_SidebarItem","handleNodeClick","EditNode_EditNode","connections","Content","children","Node","onClick","NodeInnerCustom","_ref2","config","NodeInnerCustom_Node","selectNode","src_nodes","port1","state_name","port2","message","photo_url","caption","url","state name","port3","from","options","value is result","result in value","value in result","chartSimple","offset","x","y","links","selected","hovered","Tkit","cloneDeep","chart","stateActions","mapValues","actions","any","Holst","src","initialValue","snapToGrid","Components","NodeInner","callbacks","Components_Sidebar","App","Tkit_Tkit","Components_Tkit","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.e9e91b7f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\"\r\n\r\nclass SidebarItem extends Component {\r\n    render() {\r\n        const {\r\n            type,\r\n            ports,\r\n            properties,\r\n        } = this.props;\r\n        return (\r\n            <div draggable='true' className=\"SidebarItem\" onDragStart={(event) => {\r\n                event.dataTransfer.setData(REACT_FLOW_CHART, JSON.stringify({ type, ports, properties }))\r\n            }}\r\n            >{properties.title}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidebarItem\r\n","import React from 'react';\n\nexport class EditNode extends React.Component {\n    state = {\n        ...this.props.selectedNode,\n    }\n\n    componentDidMount() {\n        const condition = Object.entries(this.state.properties.fields).length;\n        for (let i = 0; i < condition; i++) {\n            this.setState({\n                ...this.state,\n                ['value_' + i]: '',\n            });\n        }\n    }\n\n    handleChange = (event) => {\n        const { value, name } = event.target;\n\n        this.setState({\n            ['value_' + name]: value,\n        })\n    }\n\n    render() {\n        const node = this.state.properties;\n        const fields = Object.entries(node.fields);\n\n        return (\n            <>\n                <h2>{node.title}</h2>\n                <p>{node.description}</p>\n                {fields.map((field, index) => {\n                    return (\n                        <React.Fragment key={index}>\n                            <label htmlFor={field[0]}>{field[0]}:</label>\n                            <input\n                                id={field[0]}\n                                name={index}\n                                type={field[1].type}\n                                required={field[1].is_required}\n                                value={this.state['value_' + index]}\n                                onChange={this.handleChange}\n                            ></input>\n                        </React.Fragment>\n                    )\n                })}\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\r\nimport SidebarItem from './SidebarItem'\r\nimport { EditNode } from './EditNode'\r\n\r\nclass Sidebar extends Component {\r\n\tconstructor({ data }) {\r\n        super();\r\n        this.nodes = data.nodes;\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { NodesIsNotVisible } = this.props;\r\n\r\n        const nodes = this.nodes.map((node, index) => (\r\n            <SidebarItem\r\n                key={index}\r\n                type={node.type}\r\n                ports={node.ports}\r\n                properties={node.properties}\r\n                handleNodeClick={this.handleNodeClick}\r\n            />\r\n        ));\r\n\r\n    \treturn (\r\n            <div className=\"Sidebar\">\r\n            \t{!NodesIsNotVisible\r\n                ? nodes\r\n                : (\r\n                    <EditNode\r\n                        selectedNode={this.props.selectedNode}\r\n                        connections={this.props.connections}\r\n                    />\r\n                )}\r\n            </div>\r\n\t\t)\r\n\t\t\t\r\n    }\r\n}\r\n\r\nexport default Sidebar\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass Content extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Content\">{this.props.children}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\n\r\nconst Node = ({ node, handleNodeClick}) => {\r\n\r\n    return (\r\n        <div className=\"node\" onClick={() => handleNodeClick(node)}>\r\n            {node.properties.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nclass NodeInnerCustom extends React.Component {\r\n\r\n    constructor({ node, config }) {\r\n        super();\r\n        this.node = node;\r\n        this.config = config;\r\n    }\r\n\r\n    render() {\r\n        switch (this.node.type) {\r\n            case 'command':\r\n                return (\r\n                    <Node node={this.node} />\r\n                )\r\n            case 'state':\r\n                return (\r\n                    <Node node={this.node} handleNodeClick={() => this.config.selectNode(this.node)} />\r\n                )\r\n            case 'action':\r\n                return (\r\n                    <Node node={this.node} handleNodeClick={() => this.config.selectNode(this.node)} />\r\n                )\r\n            case 'condition':\r\n                return (\r\n                    <Node node={this.node} handleNodeClick={() => this.config.selectNode(this.node)} />\r\n                )\r\n\r\n            default:\r\n                return (\r\n                    <div></div>\r\n                )\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default NodeInnerCustom\r\n","export default\r\n    {'nodes': [{'type': 'command', 'ports': {'port1': {'id': 'port1', 'type': 'output'}}, 'properties': {'title': 'command', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'fields': {'title': {'type': 'text', 'is_required': true}}}}, {'type': 'state', 'ports': {'port1': {'id': 'port1', 'type': 'output'}}, 'properties': {'title': 'state', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'fields': {'state_name': {'type': 'text', 'is_required': true}}}}, {'type': 'action', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output'}}, 'properties': {'title': 'send message', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'sendMessage', 'fields': {'message': {'type': 'text', 'is_required': true}}}}, {'type': 'action', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output'}}, 'properties': {'title': 'send photo', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'sendPhoto', 'fields': {'photo_url': {'type': 'url', 'is_required': true}, 'caption': {'type': 'text', 'is_required': false}}}}, {'type': 'action', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output'}}, 'properties': {'title': 'send audio', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'sendAudio', 'fields': {'url': {'type': 'url', 'is_required': true}, 'caption': {'type': 'text', 'is_required': false}}}}, {'type': 'action', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output'}}, 'properties': {'title': 'send voice', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'sendVoice', 'fields': {'url': {'type': 'url', 'is_required': true}, 'caption': {'type': 'text', 'is_required': false}}}}, {'type': 'action', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output'}}, 'properties': {'title': 'send video', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'sendVideo', 'fields': {'url': {'type': 'url', 'is_required': true}, 'caption': {'type': 'text', 'is_required': false}}}}, {'type': 'action', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output'}}, 'properties': {'title': 'send document', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'sendDocument', 'fields': {'url': {'type': 'url', 'is_required': true}, 'caption': {'type': 'text', 'is_required': false}}}}, {'type': 'action', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output'}}, 'properties': {'title': 'set state', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'setState', 'fields': {'state name': {'type': 'text', 'is_required': true}}}}, {'type': 'action', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output'}}, 'properties': {'title': 'removeKeyboard', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'removeKeyboard', 'fields': {}}}, {'type': 'condition', 'ports': {'port1': {'id': 'port1', 'type': 'input'}, 'port2': {'id': 'port2', 'type': 'output', 'value': true}, 'port3': {'id': 'port3', 'type': 'output', 'value': false}}, 'properties': {'title': 'condition', 'description': \"\\nLorem Ipsum is simply dummy text of the printing and \\ntypesetting industry. Lorem Ipsum has been the industry's \\nstandard dummy text ever since the 1500s, \\nwhen an unknown printer took a galley of type \\nand scrambled it to make a type specimen book.\\n\", 'type': 'condition', 'fields': {'from': {'type': 'select', 'is_required': true, 'options': {'message': 'message', 'call': 'call'}}, 'value': {'type': 'text', 'is_required': true}, 'type': {'type': 'select', 'is_required': true, 'options': {'value is result': '== value', 'result in value': 'result in value', 'value in result': 'value in result'}}}}}]}","import nodes from './nodes'\n\nconst chartSimple = {\n  offset: {\n    x: 0,\n    y: 0\n  },\n  nodes: {\n  },\n  links: {\n  },\n  selected: {},\n  hovered: {}\n}\n\nexport { chartSimple, nodes as nodes}\n","import React from 'react'\r\nimport { cloneDeep, mapValues } from 'lodash'\r\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart'\r\nimport * as actions from '@mrblenny/react-flow-chart'\r\n\r\nimport Sidebar from './Sidebar'\r\nimport Content from './Holst'\r\nimport NodeInnerCustom from './NodeInnerCustom'\r\nimport { chartSimple, nodes} from '../constants'\r\n\r\nclass Tkit extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = cloneDeep(chartSimple)\r\n    }\r\n\r\n    selectNode = (node) => {\r\n        this.setState({\r\n            ...this.state,\r\n            selected: node,\r\n            NodesIsNotVisible: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const chart = this.state;\r\n\r\n        const stateActions = mapValues(actions, (any) =>\r\n            (...args) => this.setState(...args))\r\n\r\n        return(\r\n\r\n            <div className=\"Page\">\r\n\r\n                <Content>\r\n                    <FlowChartWithState initialValue={chart} config={{\r\n                        snapToGrid: true,\r\n                        selectNode: this.selectNode,\r\n                    }} Components={{\r\n                        NodeInner: NodeInnerCustom, //ADD PORT CUSTOM\r\n                    }} callbacks={stateActions} \r\n                    />\r\n                </Content>\r\n                <Sidebar\r\n                    data={nodes}\r\n                    NodesIsNotVisible={chart.NodesIsNotVisible}\r\n                    selectedNode={chart.selected}\r\n                    connections={chart}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Tkit/>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Tkit from './Components/Tkit'\n\n\nimport './styles.css'\n\nfunction App() {\n    return (\n        <Tkit />\n    )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)"],"sourceRoot":""}