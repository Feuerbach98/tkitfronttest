{"ast":null,"code":"import _classCallCheck from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mashincode/Documents/tkit/front/src/Components/Tkit.js\";\nimport React from 'react';\nimport { cloneDeep, mapValues } from 'lodash';\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart';\nimport * as actions from '@mrblenny/react-flow-chart';\nimport Sidebar from './Sidebar';\nimport Content from './Holst';\nimport NodeInnerCustom from './NodeInnerCustom';\nimport { chartSimple, nodes } from '../constants';\n\nvar Tkit = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tkit, _React$Component);\n\n  function Tkit() {\n    var _this;\n\n    _classCallCheck(this, Tkit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tkit).call(this));\n    _this.state = cloneDeep(chartSimple);\n    _this.stories = {\n      nodes: {},\n      links: _this.state.links\n    };\n    _this.test = false;\n    return _this;\n  }\n\n  _createClass(Tkit, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.test !== nextProps.test;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var test = function test() {\n        _this2.test = true;\n        console.log(_this2.test);\n      };\n\n      var chart = this.state;\n      var testvalue = this.test;\n      var stateActions = mapValues(actions, function (any) {\n        return function () {\n          return _this2.setState.apply(_this2, arguments);\n        };\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FlowChartWithState, {\n        initialValue: chart,\n        config: {\n          snapToGrid: true\n        },\n        Components: {\n          NodeInner: NodeInnerCustom //Port: PortCustom, //ADD PORT CUSTOM\n\n        },\n        callbacks: stateActions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      })), testvalue ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 31\n        }\n      }, \"true\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 49\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: test,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, \" 123\"));\n    }\n  }]);\n\n  return Tkit;\n}(React.Component);\n\nexport default Tkit;","map":{"version":3,"sources":["/home/mashincode/Documents/tkit/front/src/Components/Tkit.js"],"names":["React","cloneDeep","mapValues","FlowChartWithState","actions","Sidebar","Content","NodeInnerCustom","chartSimple","nodes","Tkit","state","stories","links","test","nextProps","console","log","chart","testvalue","stateActions","any","setState","snapToGrid","NodeInner","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,QAArC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAkC,cAAlC;;IAEMC,I;;;AAEF,kBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAaV,SAAS,CAACO,WAAD,CAAtB;AACA,UAAKI,OAAL,GAAe;AACXH,MAAAA,KAAK,EAAE,EADI;AAEXI,MAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWE;AAFP,KAAf;AAIA,UAAKC,IAAL,GAAY,KAAZ;AAPU;AAQb;;;;0CAEqBC,S,EAAW;AAC7B,aAAO,KAAKD,IAAL,KAAcC,SAAS,CAACD,IAA/B;AACH;;;6BAEQ;AAAA;;AAEL,UAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,QAAA,MAAI,CAACA,IAAL,GAAY,IAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACH,IAAjB;AACH,OAHD;;AAMA,UAAMI,KAAK,GAAG,KAAKP,KAAnB;AACA,UAAMQ,SAAS,GAAG,KAAKL,IAAvB;AAEA,UAAMM,YAAY,GAAGlB,SAAS,CAACE,OAAD,EAAU,UAACiB,GAAD;AAAA,eACpC;AAAA,iBAAa,MAAI,CAACC,QAAL,OAAA,MAAI,YAAjB;AAAA,SADoC;AAAA,OAAV,CAA9B;AAEA,0BAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,kBAAD;AAAoB,QAAA,YAAY,EAAEJ,KAAlC;AAAyC,QAAA,MAAM,EAAE;AAC7CK,UAAAA,UAAU,EAAE;AADiC,SAAjD;AAEG,QAAA,UAAU,EAAE;AACXC,UAAAA,SAAS,EAAEjB,eADA,CAEX;;AAFW,SAFf;AAMG,QAAA,SAAS,EAAEa,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAYMD,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZpC,eAcI;AAAQ,QAAA,OAAO,EAAEL,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,CAFJ;AAqBH;;;;EAlDcd,KAAK,CAACyB,S;;AAqDzB,eAAef,IAAf","sourcesContent":["import React from 'react'\r\nimport { cloneDeep, mapValues } from 'lodash'\r\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart'\r\nimport * as actions from '@mrblenny/react-flow-chart'\r\n\r\nimport Sidebar from './Sidebar'\r\nimport Content from './Holst'\r\nimport NodeInnerCustom from './NodeInnerCustom'\r\nimport { chartSimple, nodes} from '../constants'\r\n\r\nclass Tkit extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = cloneDeep(chartSimple)\r\n        this.stories = {\r\n            nodes: {},\r\n            links: this.state.links\r\n        }\r\n        this.test = false\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return this.test !== nextProps.test;\r\n    }\r\n\r\n    render() {\r\n\r\n        const test = () => {\r\n            this.test = true\r\n            console.log(this.test);\r\n        }\r\n\r\n\r\n        const chart = this.state\r\n        const testvalue = this.test\r\n\r\n        const stateActions = mapValues(actions, (any) =>\r\n            (...args) => this.setState(...args))\r\n        return(\r\n\r\n            <div className=\"Page\">\r\n\r\n                <Content>\r\n                    <FlowChartWithState initialValue={chart} config={{\r\n                        snapToGrid: true,\r\n                    }} Components={{\r\n                        NodeInner: NodeInnerCustom, \r\n                        //Port: PortCustom, //ADD PORT CUSTOM\r\n\r\n                    }} callbacks={stateActions} />\r\n                </Content>\r\n\r\n                { testvalue ? <div>true</div> : <div>false</div> }\r\n\r\n                <button onClick={test}> 123</button>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tkit\r\n\r\n"]},"metadata":{},"sourceType":"module"}