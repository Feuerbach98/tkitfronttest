{"ast":null,"code":"import _classCallCheck from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mashincode/Documents/tkit/front/src/Components/Tkit.js\";\nimport React from 'react';\nimport { cloneDeep, mapValues } from 'lodash';\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart';\nimport * as actions from '@mrblenny/react-flow-chart';\nimport Sidebar from './Sidebar';\nimport Content from './Holst';\nimport NodeInnerCustom from './NodeInnerCustom';\nimport { chartSimple, nodes } from '../constants';\n\nvar Tkit = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tkit, _React$Component);\n\n  function Tkit(props) {\n    var _this;\n\n    _classCallCheck(this, Tkit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tkit).call(this, props));\n\n    _this.log_stories = function () {\n      console.log(_this.stories); // var test = JSON.stringify(this.state);\n      // console.log(test);\n    };\n\n    _this.handleNodeClick = function (node) {};\n\n    _this.state = cloneDeep(chartSimple);\n    _this.isNodeEditmode = false;\n    _this.activeNode = false;\n    _this.stories = {\n      nodes: {},\n      links: _this.state.links\n    };\n\n    _this.handleClickEvent = function (value) {\n      console.log('done');\n      console.log(value); //this.setState({ name: value })\n    };\n\n    return _this;\n  }\n\n  _createClass(Tkit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var chart = this.state;\n      var stateActions = mapValues(actions, function (any) {\n        return function () {\n          return _this2.setState.apply(_this2, arguments);\n        };\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FlowChartWithState, {\n        initialValue: chart,\n        config: {\n          snapToGrid: true\n        },\n        Components: {\n          NodeInner: NodeInnerCustom //Here also PORT\n\n        },\n        callbacks: stateActions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Sidebar, {\n        isNodeEditmode: this.isNodeEditmode,\n        data: nodes,\n        node: this.activeNode,\n        handleClickEvent: this.updateData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Tkit;\n}(React.Component);\n\nexport default Tkit;","map":{"version":3,"sources":["/home/mashincode/Documents/tkit/front/src/Components/Tkit.js"],"names":["React","cloneDeep","mapValues","FlowChartWithState","actions","Sidebar","Content","NodeInnerCustom","chartSimple","nodes","Tkit","props","log_stories","console","log","stories","handleNodeClick","node","state","isNodeEditmode","activeNode","links","handleClickEvent","value","chart","stateActions","any","setState","snapToGrid","NodeInner","updateData","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,QAArC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAkC,cAAlC;;IAEMC,I;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;;AADe,UAiBnBC,WAjBmB,GAiBL,YAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,OAAjB,EADgB,CAEhB;AACA;AACH,KArBkB;;AAAA,UAwBnBC,eAxBmB,GAwBD,UAACC,IAAD,EAAU,CAE3B,CA1BkB;;AAEf,UAAKC,KAAL,GAAajB,SAAS,CAACO,WAAD,CAAtB;AACA,UAAKW,cAAL,GAAsB,KAAtB;AACA,UAAKC,UAAL,GAAkB,KAAlB;AACA,UAAKL,OAAL,GAAe;AACXN,MAAAA,KAAK,EAAE,EADI;AAEXY,MAAAA,KAAK,EAAE,MAAKH,KAAL,CAAWG;AAFP,KAAf;;AAKA,UAAKC,gBAAL,GAAwB,UAACC,KAAD,EAAW;AAC/BV,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ,EAF+B,CAG/B;AACH,KAJD;;AAVe;AAelB;;;;6BAaQ;AAAA;;AACL,UAAMC,KAAK,GAAG,KAAKN,KAAnB;AACA,UAAMO,YAAY,GAAGvB,SAAS,CAACE,OAAD,EAAU,UAACsB,GAAD;AAAA,eACpC;AAAA,iBAAa,MAAI,CAACC,QAAL,OAAA,MAAI,YAAjB;AAAA,SADoC;AAAA,OAAV,CAA9B;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,kBAAD;AAAoB,QAAA,YAAY,EAAEH,KAAlC;AAAyC,QAAA,MAAM,EAAE;AAC7CI,UAAAA,UAAU,EAAE;AADiC,SAAjD;AAEG,QAAA,UAAU,EAAE;AACXC,UAAAA,SAAS,EAAEtB,eADA,CACiB;;AADjB,SAFf;AAKG,QAAA,SAAS,EAAEkB,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eASI,oBAAC,OAAD;AAAS,QAAA,cAAc,EAAE,KAAKN,cAA9B;AAA8C,QAAA,IAAI,EAAEV,KAApD;AAA2D,QAAA,IAAI,EAAE,KAAKW,UAAtE;AAAkF,QAAA,gBAAgB,EAAE,KAAKU,UAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAaH;;;;EA/Cc9B,KAAK,CAAC+B,S;;AAkDzB,eAAerB,IAAf","sourcesContent":["import React from 'react'\r\nimport { cloneDeep, mapValues } from 'lodash'\r\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart'\r\nimport * as actions from '@mrblenny/react-flow-chart'\r\n\r\nimport Sidebar from './Sidebar'\r\nimport Content from './Holst'\r\nimport NodeInnerCustom from './NodeInnerCustom'\r\nimport { chartSimple, nodes} from '../constants'\r\n\r\nclass Tkit extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = cloneDeep(chartSimple)\r\n        this.isNodeEditmode = false\r\n        this.activeNode = false\r\n        this.stories = {\r\n            nodes: {},\r\n            links: this.state.links\r\n        }\r\n\r\n        this.handleClickEvent = (value) => {\r\n            console.log('done');\r\n            console.log(value);\r\n            //this.setState({ name: value })\r\n        }\r\n    }\r\n\r\n    log_stories = () => {\r\n        console.log(this.stories);\r\n        // var test = JSON.stringify(this.state);\r\n        // console.log(test);\r\n    }\r\n\r\n\r\n    handleNodeClick = (node) => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const chart = this.state\r\n        const stateActions = mapValues(actions, (any) =>\r\n            (...args) => this.setState(...args))\r\n        return (\r\n            <div className=\"Page\">\r\n                <Content>\r\n                    <FlowChartWithState initialValue={chart} config={{\r\n                        snapToGrid: true,\r\n                    }} Components={{\r\n                        NodeInner: NodeInnerCustom, //Here also PORT\r\n\r\n                    }} callbacks={stateActions} />\r\n                </Content>\r\n                <Sidebar isNodeEditmode={this.isNodeEditmode} data={nodes} node={this.activeNode} handleClickEvent={this.updateData}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tkit"]},"metadata":{},"sourceType":"module"}