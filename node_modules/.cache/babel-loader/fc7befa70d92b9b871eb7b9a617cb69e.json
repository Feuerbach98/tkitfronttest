{"ast":null,"code":"import _classCallCheck from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mashincode/Documents/tkit/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/home/mashincode/Documents/tkit/front/src/Components/Tkit.js\",\n    _this3 = this;\n\nimport React from 'react';\nimport { cloneDeep, mapValues } from 'lodash';\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart';\nimport * as actions from '@mrblenny/react-flow-chart';\nimport Sidebar from './Sidebar';\nimport Content from './Holst';\nimport NodeInnerCustom from './NodeInnerCustom';\nimport { chartSimple, nodes } from '../constants';\n\nvar Tkit = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tkit, _React$Component);\n\n  function Tkit() {\n    var _this;\n\n    _classCallCheck(this, Tkit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tkit).call(this));\n    _this.state = cloneDeep(chartSimple);\n    _this.stories = {\n      nodes: {},\n      links: _this.state.links\n    };\n    return _this;\n  }\n\n  _createClass(Tkit, [{\n    key: \"someMethod\",\n    value: function someMethod() {\n      // Force a render with a simulated state change\n      this.setState({\n        state: this.state\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var chart = this.state;\n      var stateActions = mapValues(actions, function (any) {\n        return function () {\n          return _this2.setState.apply(_this2, arguments);\n        };\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FlowChartWithState, {\n        initialValue: chart,\n        config: {\n          snapToGrid: true\n        },\n        Components: {\n          NodeInner: NodeInnerCustom //ADD PORT CUSTOM\n\n        },\n        callbacks: stateActions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      })), chart.selected.type ? /*#__PURE__*/React.createElement(Sidebar, {\n        isNodeEditMode: true,\n        data: nodes,\n        node: chart.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(Sidebar, {\n        isNodeEditMode: false,\n        data: nodes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return Tkit;\n}(React.Component);\n\nvar App = function App() {\n  return /*#__PURE__*/React.createElement(Tkit, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/home/mashincode/Documents/tkit/front/src/Components/Tkit.js"],"names":["React","cloneDeep","mapValues","FlowChartWithState","actions","Sidebar","Content","NodeInnerCustom","chartSimple","nodes","Tkit","state","stories","links","setState","chart","stateActions","any","snapToGrid","NodeInner","selected","type","Component","App"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,QAArC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAkC,cAAlC;;IAEMC,I;;;AAEF,kBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAaV,SAAS,CAACO,WAAD,CAAtB;AACA,UAAKI,OAAL,GAAe;AACXH,MAAAA,KAAK,EAAE,EADI;AAEXI,MAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWE;AAFP,KAAf;AAHU;AAOb;;;;iCAEY;AACT;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKA;AAAd,OAAd;AACH;;;6BAEQ;AAAA;;AACL,UAAMI,KAAK,GAAG,KAAKJ,KAAnB;AAEA,UAAMK,YAAY,GAAGd,SAAS,CAACE,OAAD,EAAU,UAACa,GAAD;AAAA,eACpC;AAAA,iBAAa,MAAI,CAACH,QAAL,OAAA,MAAI,YAAjB;AAAA,SADoC;AAAA,OAAV,CAA9B;AAGA,0BAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,kBAAD;AAAoB,QAAA,YAAY,EAAEC,KAAlC;AAAyC,QAAA,MAAM,EAAE;AAC7CG,UAAAA,UAAU,EAAE;AADiC,SAAjD;AAEG,QAAA,UAAU,EAAE;AACXC,UAAAA,SAAS,EAAEZ,eADA,CACiB;;AADjB,SAFf;AAKG,QAAA,SAAS,EAAES,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAWMD,KAAK,CAACK,QAAN,CAAeC,IAAf,gBACE,oBAAC,OAAD;AAAS,QAAA,cAAc,EAAE,IAAzB;AAA+B,QAAA,IAAI,EAAEZ,KAArC;AAA4C,QAAA,IAAI,EAAEM,KAAK,CAACK,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gBAGE,oBAAC,OAAD;AAAS,QAAA,cAAc,EAAE,KAAzB;AAAgC,QAAA,IAAI,EAAEX,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdR,CAFJ;AAoBH;;;;EA1CcT,KAAK,CAACsB,S;;AA8CzB,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAEd,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CALD;;AAOA,eAAeA,GAAf","sourcesContent":["import React from 'react'\r\nimport { cloneDeep, mapValues } from 'lodash'\r\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart'\r\nimport * as actions from '@mrblenny/react-flow-chart'\r\n\r\nimport Sidebar from './Sidebar'\r\nimport Content from './Holst'\r\nimport NodeInnerCustom from './NodeInnerCustom'\r\nimport { chartSimple, nodes} from '../constants'\r\n\r\nclass Tkit extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = cloneDeep(chartSimple)\r\n        this.stories = {\r\n            nodes: {},\r\n            links: this.state.links\r\n        }\r\n    }\r\n\r\n    someMethod() {\r\n        // Force a render with a simulated state change\r\n        this.setState({ state: this.state });\r\n    }\r\n\r\n    render() {\r\n        const chart = this.state\r\n\r\n        const stateActions = mapValues(actions, (any) =>\r\n            (...args) => this.setState(...args))\r\n\r\n        return(\r\n\r\n            <div className=\"Page\">\r\n\r\n                <Content>\r\n                    <FlowChartWithState initialValue={chart} config={{\r\n                        snapToGrid: true,\r\n                    }} Components={{\r\n                        NodeInner: NodeInnerCustom, //ADD PORT CUSTOM\r\n\r\n                    }} callbacks={stateActions} />\r\n                </Content>\r\n\r\n                { chart.selected.type ? \r\n                    <Sidebar isNodeEditMode={true} data={nodes} node={chart.selected}/>\r\n                :\r\n                    <Sidebar isNodeEditMode={false} data={nodes}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Tkit/>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n"]},"metadata":{},"sourceType":"module"}